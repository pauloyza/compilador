
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY ATRIBUTION BEGIN COMMA CONSTANTE DECIMER DIVIDE DOT DOTCOMMA DOTDOT ELSE END EQUAL EXCLA FUNCAO ID IF INTEGER LCOL LJACARE LPAREN MINUS NUMBER OF PLUS QUOTATION RCOL READ REAL RECORD RJACARE RPAREN THEN TIMES TIPO VARIAVEL WHILE WRITEexpression : BEGINexpression : expression "+" termexpression : expression "-" termexpression : termterm : term "*" factorterm : term "/" factorterm : factorfactor : NUMBERfactor : "(" expression ")"'
    
_lr_action_items = {'BEGIN':([0,6,],[2,2,]),'NUMBER':([0,6,7,8,9,10,],[5,5,5,5,5,5,]),'(':([0,6,7,8,9,10,],[6,6,6,6,6,6,]),'$end':([1,2,3,4,5,12,13,14,15,16,],[0,-1,-4,-7,-8,-2,-3,-5,-6,-9,]),'+':([1,2,3,4,5,11,12,13,14,15,16,],[7,-1,-4,-7,-8,7,-2,-3,-5,-6,-9,]),'-':([1,2,3,4,5,11,12,13,14,15,16,],[8,-1,-4,-7,-8,8,-2,-3,-5,-6,-9,]),')':([2,3,4,5,11,12,13,14,15,16,],[-1,-4,-7,-8,16,-2,-3,-5,-6,-9,]),'*':([3,4,5,12,13,14,15,16,],[9,-7,-8,9,9,-5,-6,-9,]),'/':([3,4,5,12,13,14,15,16,],[10,-7,-8,10,10,-5,-6,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,],[1,11,]),'term':([0,6,7,8,],[3,3,12,13,]),'factor':([0,6,7,8,9,10,],[4,4,4,4,14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> BEGIN','expression',1,'p_expression_begin','labsintatico.py',5),
  ('expression -> expression + term','expression',3,'p_expression_plus','labsintatico.py',8),
  ('expression -> expression - term','expression',3,'p_expression_minus','labsintatico.py',12),
  ('expression -> term','expression',1,'p_expression_term','labsintatico.py',16),
  ('term -> term * factor','term',3,'p_term_times','labsintatico.py',20),
  ('term -> term / factor','term',3,'p_term_div','labsintatico.py',24),
  ('term -> factor','term',1,'p_term_factor','labsintatico.py',28),
  ('factor -> NUMBER','factor',1,'p_factor_num','labsintatico.py',32),
  ('factor -> ( expression )','factor',3,'p_factor_expr','labsintatico.py',36),
]
